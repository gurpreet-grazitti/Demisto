<?php/* ---------------------------------------------------------------------------------------  Admin Panel  ---------------------------------------------------------------------------------------- */require_once ('admin/index.php');/* ---------------------------------------------------------------------------------------  TGM  ---------------------------------------------------------------------------------------- */require_once 'functions/class-tgm-plugin-activation.php';add_action( 'tgmpa_register', 'add_retaurant_required_plugins' );function add_retaurant_required_plugins(){	/**	 * Array of plugin arrays. Required keys are name and slug.	 * If the source is NOT from the .org repo, then source is also required.	 */	$plugins = array(		array(			'name'     				=> 'Contact Form 7', // The plugin name			'slug'     				=> 'contact-form-7', // The plugin slug (typically the folder name)			'source'   				=> get_template_directory() . '/functions/plugins/contact-form-7.zip', // The plugin source			'required' 				=> true, // If false, the plugin is only 'recommended' instead of required			'version' 				=> '', // E.g. 1.0.0. If set, the active plugin must be this version or higher, otherwise a notice is presented			'force_activation' 		=> false, // If true, plugin is activated upon theme activation and cannot be deactivated until theme switch			'force_deactivation' 	=> false, // If true, plugin is deactivated upon theme switch, useful for theme-specific plugins			'external_url' 			=> '', // If set, overrides default API URL and points to an external URL		),		array(			'name'     				=> 'Szia Theme Shortcodes', // The plugin name			'slug'     				=> 'szia-shortcodes', // The plugin slug (typically the folder name)			'source'   				=> get_template_directory() . '/functions/plugins/szia-shortcodes.zip', // The plugin source			'required' 				=> true, // If false, the plugin is only 'recommended' instead of required			'version' 				=> '', // E.g. 1.0.0. If set, the active plugin must be this version or higher, otherwise a notice is presented			'force_activation' 		=> false, // If true, plugin is activated upon theme activation and cannot be deactivated until theme switch			'force_deactivation' 	=> false, // If true, plugin is deactivated upon theme switch, useful for theme-specific plugins			'external_url' 			=> '', // If set, overrides default API URL and points to an external URL		),                array(			'name'     				=> 'Szia Theme Post Types', // The plugin name			'slug'     				=> 'szia-post-types', // The plugin slug (typically the folder name)			'source'   				=> get_template_directory() . '/functions/plugins/szia-post-types.zip', // The plugin source			'required' 				=> true, // If false, the plugin is only 'recommended' instead of required			'version' 				=> '', // E.g. 1.0.0. If set, the active plugin must be this version or higher, otherwise a notice is presented			'force_activation' 		=> false, // If true, plugin is activated upon theme activation and cannot be deactivated until theme switch			'force_deactivation' 	=> false, // If true, plugin is deactivated upon theme switch, useful for theme-specific plugins			'external_url' 			=> '', // If set, overrides default API URL and points to an external URL		),            			);	// Change this to your theme text domain, used for internationalising strings	$theme_text_domain = 'szia';	/**	 * Array of configuration settings. Amend each line as needed.	 * If you want the default strings to be available under your own theme domain,	 * leave the strings uncommented.	 * Some of the strings are added into a sprintf, so see the comments at the	 * end of each line for what each argument will be.	 */	$config = array(		'domain'       		=> $theme_text_domain,         	// Text domain - likely want to be the same as your theme.		'default_path' 		=> '',                         	// Default absolute path to pre-packaged plugins		'parent_menu_slug' 	=> 'themes.php', 				// Default parent menu slug		'parent_url_slug' 	=> 'themes.php', 				// Default parent URL slug		'menu'         		=> 'install-required-plugins', 	// Menu slug		'has_notices'      	=> true,                       	// Show admin notices or not		'is_automatic'    	=> false,					   	// Automatically activate plugins after installation or not		'message' 			=> '',							// Message to output right before the plugins table		'strings'      		=> array(			'page_title'                       			=> __( 'Install Required Plugins', $theme_text_domain ),			'menu_title'                       			=> __( 'Install Plugins', $theme_text_domain ),			'installing'                       			=> __( 'Installing Plugin: %s', $theme_text_domain ), // %1$s = plugin name			'oops'                             			=> __( 'Something went wrong with the plugin API.', $theme_text_domain ),			'notice_can_install_required'     			=> _n_noop( 'This theme requires the following plugin: %1$s.', 'This theme requires the following plugins: %1$s.' ), // %1$s = plugin name(s)			'notice_can_install_recommended'			=> _n_noop( 'This theme recommends the following plugin: %1$s.', 'This theme recommends the following plugins: %1$s.' ), // %1$s = plugin name(s)			'notice_cannot_install'  					=> _n_noop( 'Sorry, but you do not have the correct permissions to install the %s plugin. Contact the administrator of this site for help on getting the plugin installed.', 'Sorry, but you do not have the correct permissions to install the %s plugins. Contact the administrator of this site for help on getting the plugins installed.' ), // %1$s = plugin name(s)			'notice_can_activate_required'    			=> _n_noop( 'The following required plugin is currently inactive: %1$s.', 'The following required plugins are currently inactive: %1$s.' ), // %1$s = plugin name(s)			'notice_can_activate_recommended'			=> _n_noop( 'The following recommended plugin is currently inactive: %1$s.', 'The following recommended plugins are currently inactive: %1$s.' ), // %1$s = plugin name(s)			'notice_cannot_activate' 					=> _n_noop( 'Sorry, but you do not have the correct permissions to activate the %s plugin. Contact the administrator of this site for help on getting the plugin activated.', 'Sorry, but you do not have the correct permissions to activate the %s plugins. Contact the administrator of this site for help on getting the plugins activated.' ), // %1$s = plugin name(s)			'notice_ask_to_update' 						=> _n_noop( 'The following plugin needs to be updated to its latest version to ensure maximum compatibility with this theme: %1$s.', 'The following plugins need to be updated to their latest version to ensure maximum compatibility with this theme: %1$s.' ), // %1$s = plugin name(s)			'notice_cannot_update' 						=> _n_noop( 'Sorry, but you do not have the correct permissions to update the %s plugin. Contact the administrator of this site for help on getting the plugin updated.', 'Sorry, but you do not have the correct permissions to update the %s plugins. Contact the administrator of this site for help on getting the plugins updated.' ), // %1$s = plugin name(s)			'install_link' 					  			=> _n_noop( 'Begin installing plugin', 'Begin installing plugins' ),			'activate_link' 				  			=> _n_noop( 'Activate installed plugin', 'Activate installed plugins' ),			'return'                           			=> __( 'Return to Required Plugins Installer', $theme_text_domain ),			'plugin_activated'                 			=> __( 'Plugin activated successfully.', $theme_text_domain ),			'complete' 									=> __( 'All plugins installed and activated successfully. %s', $theme_text_domain ), // %1$s = dashboard link			'nag_type'									=> 'updated' // Determines admin notice type - can only be 'updated' or 'error'		)	);	tgmpa( $plugins, $config );}/* ---------------------------------------------------------------------------------------  Post Types  ---------------------------------------------------------------------------------------- *///require_once get_template_directory() . "/functions/post-format-settings/post-format-settings.php";//require_once get_template_directory() . "/functions/post-types/testimonial.php";//require_once get_template_directory() . "/functions/post-types/recent-works.php";//require_once get_template_directory() . "/functions/post-types/works-slider.php";//require_once get_template_directory() . "/functions/post-types/team.php";/* ---------------------------------------------------------------------------------------  Widgets  ---------------------------------------------------------------------------------------- */require_once get_template_directory() . "/functions/widgets/footer-social-widget.php";require_once get_template_directory() . "/functions/widgets/footer-contact-widget.php";/* ---------------------------------------------------------------------------------------  After Theme Setup  ---------------------------------------------------------------------------------------- */if (!isset($content_width))    $content_width = 600;function szia_setup() {    /*     * Makes szia available for translation.     *     * Translations can be added to the /languages/ directory.     *      *      */    load_theme_textdomain('szia', get_template_directory() . '/languages');    // This theme styles the visual editor with editor-style.css to match the theme style.    add_editor_style();    // Custom Header    $defaults = array(        'default-image' => '',        'random-default' => false,        'width' => 0,        'height' => 0,        'flex-height' => false,        'flex-width' => false,        'default-text-color' => '',        'header-text' => true,        'uploads' => true,        'wp-head-callback' => '',        'admin-head-callback' => '',        'admin-preview-callback' => '',    );    add_theme_support( 'custom-header', $defaults );    // Adds RSS feed links to <head> for posts and comments.    add_theme_support('automatic-feed-links');    // This theme supports a variety of post formats.    add_theme_support('post-formats', array(        'gallery', 'image', 'video'    ));    // This theme uses wp_nav_menu() in one location.    register_nav_menu('primary', __('Primary Menu', 'szia'));    register_nav_menu('secondary', __('Secondary Menu', 'szia'));    /*     * This theme supports custom background color and image, and here     * we also set up the default background color.     */    add_theme_support('custom-background', array(        'default-color' => 'e6e6e6',    ));    // This theme uses a custom image size for featured images, displayed on "standard" posts.    add_theme_support('post-thumbnails');    //set_post_thumbnail_size( 590, 211 ); // Unlimited height, soft crop    // Used for large feature (header) images.    //add_image_size( 'large-feature', $custom_header_support['width'], $custom_header_support['height'], true );}add_action('after_setup_theme', 'szia_setup');/* ---------------------------------------------------------------------------------------  Nav Menu Customization  ---------------------------------------------------------------------------------------- */function szia_nav_menu_items($menu_loc = 'primary') {    $menuid = get_nav_menu_locations();        //return;        if (isset($menuid[$menu_loc])) {        $menu = wp_get_nav_menu_object($menuid[$menu_loc]);        $items = wp_get_nav_menu_items($menu);        $menu_items = array();        if (!empty($items)) {            foreach ($items as $item) {                if (is_numeric($item->post_name)) {                                        $menu_item_object_id = get_post_meta($item->ID,'_menu_item_object_id',true);                                        $p = get_post((int)$menu_item_object_id);                                        $menu_items[] = array((int)$item->object_id, $item->title, $p->post_name, $item->classes);                                    } else {                                        $menu_items[] = array((int)$item->object_id, $item->title, $item->post_name, $item->classes);                }            }                        if (!empty($menu_items))                return $menu_items;        }    }    return false;}/* ---------------------------------------------------------------------------------------  Load Szia theme scripts  ---------------------------------------------------------------------------------------- */function szia_primary_load_scripts() {    global $smof_data;            $skin = 'default';        if(isset($smof_data['szia_skin']))        $skin = $smof_data['szia_skin'];        //$template = get_page_template();        wp_enqueue_style('font-awesome',get_template_directory_uri()."/css/font-awesome/css/font-awesome.css");        wp_enqueue_style('szia-base',get_template_directory_uri()."/css/default/css/base.css");    wp_enqueue_style('szia-tooltipster',get_template_directory_uri()."/css/default/css/tooltipster.css");    wp_enqueue_style('szia-jquery',get_template_directory_uri()."/css/default/css/jquery.selectbox.css");    wp_enqueue_style('szia-magnific',get_template_directory_uri()."/css/default/css/magnific-popup.css");    wp_enqueue_style('szia-skeleton',get_template_directory_uri()."/css/default/css/skeleton.css");        //wp_enqueue_style('szia-layout',get_template_directory_uri()."/css/{$skin}/css/layout.css");    wp_enqueue_style('szia-layout',get_template_directory_uri()."/css/default/css/layout.css");        if($skin != 'custom' && !empty($skin))        wp_enqueue_style('szia-color',get_template_directory_uri()."/css/{$skin}/css/color.css");        wp_enqueue_style('szia-flexslider',get_template_directory_uri()."/css/default/css/flexslider.css");    if(is_home() || is_search() || is_singular()){        wp_enqueue_style('szia-blog-layout',get_template_directory_uri()."/css/blog-layout.css");    }    wp_enqueue_style('szia-style', get_stylesheet_uri());    wp_enqueue_style('szia-custom-style',get_template_directory_uri()."/custom_style.php");    if (is_singular())        wp_enqueue_script("comment-reply");    //wp_enqueue_script(array('jquery-ui-accordion','jquery-ui-tabs','jquery-ui-draggable','jquery-ui-droppable','jquery-ui-position'),'',array('jquery','jquery-ui-core'));	    wp_enqueue_script('jquery-validate', get_template_directory_uri() . '/js/jquery.validate.min.js', array('jquery'), '', true);    wp_enqueue_script('jquery-tooltipster', get_template_directory_uri() . '/js/jquery.tooltipster.min.js', array('jquery'), '', true);    wp_enqueue_script('jquery-scrollTo', get_template_directory_uri() . '/js/jquery.scrollTo.js', array('jquery'), '', true);    wp_enqueue_script('jquery-nav', get_template_directory_uri() . '/js/jquery.nav.js', array('jquery'), '', true);    wp_enqueue_script('jquery-timelinr-0.9.3', get_template_directory_uri() . '/js/jquery.timelinr-0.9.3.js', array('jquery'), '', true);    wp_enqueue_script('jquery-waypoints', get_template_directory_uri() . '/js/waypoints.min.js', array('jquery'), '', true);    wp_enqueue_script('jquery-flexslider', get_template_directory_uri() . '/js/jquery.flexslider.js', array('jquery'), '', true);    wp_enqueue_script('jquery-carouFredSel-6.2.1', get_template_directory_uri() . '/js/jquery.carouFredSel-6.2.1.js', array('jquery'), '', true);    wp_enqueue_script('jquery-touchSwipe', get_template_directory_uri() . '/js/jquery.touchSwipe.min.js', array('jquery'), '', true);    wp_enqueue_script('jquery-magnific-popup', get_template_directory_uri() . '/js/jquery.magnific-popup.js', array('jquery'), '', true);    wp_enqueue_script('jquery-parallax', get_template_directory_uri() . '/js/parallax.js', array('jquery'), '', true);    wp_enqueue_script('jquery-tubular', get_template_directory_uri() . '/js/jquery.tubular.1.0.js', array('jquery'), '', true);    wp_enqueue_script('jquery-retina', get_template_directory_uri() . '/js/retina.js', array('jquery'), '', true);    wp_enqueue_script('custom', get_template_directory_uri() . '/js/custom.js', array('jquery'), '', true);}add_action('wp_enqueue_scripts', 'szia_primary_load_scripts', 20);/* ---------------------------------------------------------------------------------------  Sidebars  ---------------------------------------------------------------------------------------- */register_sidebar(array(    'name' => __('Blog Sidebar', 'szia'),    'id' => 'blog',        'description' => __('Blog page sidebar area','szia'),    'before_widget' => '<div id="%1$s" class="widget %2$s">',    'after_widget' => "</div>",    'before_title' => '<h3>',    'after_title' => '</h3>',));register_sidebar(array(    'name' => __('Footer1', 'szia'),    'id' => 'footer1',        'description' => __('Footer sidebar area 1','szia'),    'before_widget' => '',    'after_widget' => "",    'before_title' => '',    'after_title' => '',));register_sidebar(array(    'name' => __('Footer2', 'szia'),    'id' => 'footer2',        'description' => __('Footer sidebar area 2','szia'),    'before_widget' => '',    'after_widget' => "",    'before_title' => '',    'after_title' => '',));/* ---------------------------------------------------------------------------------------    Post excerpt  ---------------------------------------------------------------------------------------- */add_action('excerpt_length','szia_excerpt_length',20);function szia_excerpt_length($len){    if(is_home()){        $len = 36;    }    return $len;}add_action('excerpt_more','szia_excerpt_more',20);function szia_excerpt_more($more){    if(is_home()){                return  '...';    }    return '[...]';}/* ---------------------------------------------------------------------------------------    Post link filters  ---------------------------------------------------------------------------------------- */add_filter('next_post_link', 'szia_next_post_link_attributes');function szia_next_post_link_attributes($link){       $firstpos = stripos($link,' ');        if(!empty($link) and ($firstpos = stripos($link,' ')) !== FALSE){        $lf = substr($link,0,$firstpos);        $ll = substr($link,$firstpos,strlen($link));        $lf .= ' class="post_next"';        $link = $lf.$ll;    }        return $link;      }add_filter('previous_post_link', 'szia_prev_post_link_attributes');function szia_prev_post_link_attributes($link) {        $firstpos = stripos($link,' ');        if(!empty($link) and ($firstpos = stripos($link,' ')) !== FALSE){        $lf = substr($link,0,$firstpos);        $ll = substr($link,$firstpos,strlen($link));        $lf .= ' class="post_previous"';        $link = $lf.$ll;    }        return $link;    }add_filter('previous_posts_link_attributes','szia_prev_posts_link_cb');function szia_prev_posts_link_cb($content){    return 'class="button_big solid nav-right"';}add_filter('next_posts_link_attributes','szia_next_posts_link_cb');function szia_next_posts_link_cb(){    return 'class="button_big solid"';}/* ---------------------------------------------------------------------------------------    Comments  ---------------------------------------------------------------------------------------- */function szia_comment( $comment, $args, $depth ) {		$GLOBALS['comment'] = $comment;	//$max_depth = $args['max_depth'];	//$liclass = ( $GLOBALS['ncc'] % 2 == 0 )? 'even' : 'odd';        //print_r($comment);        $user = get_user_by('email',$comment->comment_author_email);        $class = '';        if(!empty($user)){            if(isset($user->caps['administrator']) && $user->caps['administrator'] == 1):                $class = 'administrator';                            endif;        }	?>        <li>            <div class="comments">            <div class="avatar">                <?php echo get_avatar( $comment, 50 ); ?>                            </div>            <div class="comment_desc">            <div class="commented_by <?php echo $class?>">                                <strong><?php echo $comment->comment_author?></strong>                                <span class="date"><?php echo get_comment_date()?></span>                <span class="sl_sep">/</span>                <?php comment_reply_link( array_merge(                         array('before' => '<span class="reply">','after'=>'</span>'),                         array('depth' => $depth, 'max_depth' => $args['max_depth'] )                        )); ?>                            </div>                <p><?php comment_text(); ?></p>            </div>            </div><?php }/* ---------------------------------------------------------------------------------------    wp_footer action  ---------------------------------------------------------------------------------------- */add_action('wp_footer','szia_footer_script',100);function szia_footer_script(){    global $smof_data;    ?>    <script type="text/javascript">        jQuery(function($){            $('.timeline').timelinr({                orientation: 'vertical',                issuesSpeed: 300,                datesSpeed: 100,                issuesSpeed: 500,                arrowKeys: 'true',                startAt: 1            });            <?php if(isset($smof_data['szia_fp3_video_bg_id']) && !empty($smof_data['szia_fp3_video_bg_id'])):?>            $('#home_video').tubular({videoId: '<?php echo $smof_data['szia_fp3_video_bg_id']?>'});            <?php endif;?>        });        //<![CDATA[        jQuery(window).load(function() { // makes sure the whole site is loaded                jQuery('#status').fadeOut(); // will first fade out the loading animation                jQuery('#preloader').delay(350).fadeOut('slow'); // will fade out the white DIV that covers the website.                jQuery('body').delay(350).css({'overflow':'visible'});        });	//]]>            </script>                <?php}